{"version":3,"file":"static/js/607.ea6b9832.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Navbars/AdminNavbar.js","components/Sidebar/Sidebar.js","layouts/Admin.js"],"sourcesContent":["import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Navbar,\n  Container,\n  Button,\n} from \"reactstrap\";\n\nconst AdminNavbar = () => {\n  const navigate = useNavigate()\n\n  const handleLogout = () => {\n    localStorage.clear();\n    navigate('/auth')\n  }\n\n  return (\n        <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n          <Container>\n            <Button color=\"info\" onClick={handleLogout}><img src=\"https://img.icons8.com/ios-filled/20/FFFFFF/exit.png\" alt=\"logout\" title=\"Logout\"/>&emsp;Logout</Button>\n          </Container>\n        </Navbar>\n  );\n};\n\nexport default AdminNavbar;\n\n","/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Collapse,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      if (prop.path !== \"/detail-article/:id\" && prop.path !== \"/article\"){\n        return (\n          <NavItem key={key}>\n            <NavLink\n              to={prop.layout + prop.path}\n              tag={NavLinkRRD}\n              onClick={this.closeCollapse}\n              activeclassname=\"active\"\n            >\n              <i className={prop.icon} />\n              {prop.name}\n            </NavLink>\n          </NavItem>\n        );\n      }\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={logo.imgSrc}\n              />\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav className=\"nav-link-icon\">\n                <i className=\"ni ni-bell-55\" />\n              </DropdownToggle>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    {/* <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                    /> */}\n                  </span>\n                </Media>\n              </DropdownToggle>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","import React, { useEffect } from \"react\";\nimport { useLocation, Route, Navigate, Routes, useNavigate } from \"react-router-dom\";\n\n// core components\nimport AdminNavbar from \"../components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"../components/Sidebar/Sidebar.js\";\n\nimport routes from \"../../src/routes\";\n\nconst Admin = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n\n  const navigate = useNavigate()\n\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  useEffect(() => {\n    const isAuthenticate = localStorage.getItem('authentihated')\n    const token = localStorage.getItem('token')\n\n    if(!token || !isAuthenticate){\n      navigate('/auth')\n    }\n  })\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.path}\n            element={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return (\n    <>\n      <Sidebar\n        {...props}\n        routes={routes}\n        // logo={{\n        //   innerLink: \"/admin/index\",\n        //   imgSrc: require(\"../assets/img/brand/kitong-bisa.png\"),\n        //   imgAlt: \"...\"\n        // }}\n      />\n      <div className=\"main-content\" ref={mainContent}>\n        <AdminNavbar />\n        <Routes>\n        {getRoutes(routes)}\n          {/* <Redirect from=\"*\" to=\"/admin/index\" /> */}\n          <Route\n                path=\"*\"\n                element={<Navigate to=\"/admin/index\" replace />}\n            />\n        </Routes>\n          \n        <br/>\n      </div>\n    </>\n  );\n};\n\nexport default Admin;\n"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","defineProperty","getOwnPropertyDescriptors","defineProperties","navigate","useNavigate","className","expand","id","color","onClick","localStorage","clear","src","alt","title","Sidebar","props","state","collapseOpen","toggleCollapse","setState","closeCollapse","createLinks","routes","map","prop","path","to","layout","tag","NavLinkRRD","activeclassname","icon","name","activeRoute","bind","routeName","this","location","pathname","indexOf","navbarBrandProps","bgColor","logo","innerLink","Link","outterLink","href","fluid","type","imgAlt","imgSrc","nav","navbar","isOpen","xs","React","defaultProps","mainContent","useLocation","document","documentElement","scrollTop","scrollingElement","current","useEffect","isAuthenticate","getItem","ref","element","component","getRoutes","replace"],"sourceRoot":""}